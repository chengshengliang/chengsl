(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{155:function(s,t,a){"use strict";a.r(t);var e=a(0),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"对babel的认知"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对babel的认知"}},[s._v("#")]),s._v(" 对babel的认知")]),s._v(" "),a("p",[s._v("babel是js的编译器，可以将es6+的代码转换为向后兼容的js语法，从而使低版本和当前浏览器都可以识别他。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：可以对js代码进行转换\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：可以通过@babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("polyfill模块，用polyfill方式为当前环境补充没有的特性\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：还可以进行源码转换\n\n")])])]),a("h2",{attrs:{id:"对babel的编译原理（三个过程）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对babel的编译原理（三个过程）"}},[s._v("#")]),s._v(" 对babel的编译原理（三个过程）")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：解析：将代码字符串解析成抽象语法树（"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AST")]),s._v("）\n    大致分为两个过程："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：进行分词就是将语法字符串进行循环遍历拆成最小单元数组"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：语法分析，建立每个最小单元之间的语法关系"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：转换：将抽象语法树进行转换操作\n这个阶段就会使用到插件了，不使用的话原本样子输出源码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n\n了解plugin和preset区别\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：plugin则是插件意思，转换过程中使用到了引入即可实现转换\n    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：preset是babel官方提供的插件集，每年更新一次只更新本年批准的内容，（babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("preset"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("env是最全的插件集合）\n同时存在执行顺序：\nPlugin 会运行在 Preset 之前。\nPlugin 会从第一个开始顺序执行。\nPreset "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("的顺序则刚好相反")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("从最后一个逆序执行"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("。\n\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：生成：将转换后的代码再生成代码字符串（通过babel"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("genenrotor将ast树转换为es5浏览器可以识别的代码）\n")])])]),a("p",[a("a",{attrs:{href:"https://www.zoo.team/article/babel",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);