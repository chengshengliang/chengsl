(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{152:function(s,a,e){"use strict";e.r(a);var t=e(0),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("1.什么是闭包?")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("闭包是一个可以访问另一个函数内部变量的函数（闭包就是将函数内部和函数外部连接起来的一座桥梁）\n\n")])])]),e("p",[s._v("2：为什么需要闭包？")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("局部变量不能永久保存，全局变量污染变量环境，所以闭包很好的解决了，函数全局变量污染问题和将变量保存在内存中。\n\n")])])]),e("p",[s._v("3：使用闭包需要注意些什么？？")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：闭包会将变量保存在内存中，在ie（"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("）之前低版本浏览器中会造成内存泄漏，导致网页性能问题，\n所以，虽然闭包本身不会出现问题，在使用时候需要手动回收清除，将他指向"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v("\n\n")])])]),e("p",[s._v("4：js的垃圾回收机制")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("有了垃圾回收机制，我们代码写来更为轻松，浏览器会自动回收这些无用的代码，释放内存。\n垃圾回收有两种方法：标记清除、引用计数。\n引用计数方式在循环引用时候容易造成内存泄漏，很多浏览器已经不采纳了。\n标记清除，实在进入和离开环境时候都会打上标签来标识。\n\n")])])]),e("p",[s._v("4：js的内存泄漏")]),s._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[s._v("    对于不再用到的内存，没有及时释放，就叫做内存泄漏（memory leak）\n\n")])])]),e("p",[e("a",{attrs:{href:"https://juejin.im/entry/5bfff85bf265da61553a8c2c",target:"_blank",rel:"noopener noreferrer"}},[s._v("垃圾回收机制参考"),e("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=n.exports}}]);